# TODO: x87 floating point
# TODO: The XED tables contain all of this information, plus flag r/w

AAA,AX <- AL
AAD,AX <- AX
AAM,AX <- AL
AAS,AX <- AX
CBW,AX <- AL
CWDE,EAX <- AX
CDQE,RAX <- EAX
CMPS[BWDQ],<- mem RSI RDI,Smaller registers in legacy mode
CMPXCHG,RAX <- RAX,Smaller registers depending on argument
CMPXCHG8B,EAX EDX <- EAX EDX
CMPXCHG16B,RAX RDX <- RAX RDX
CPUID,EAX EBX ECX EDX <- EAX ECX
CWD,DX AX <- AX
CDQ,EDX EAX <- EAX
CDO,RDX RAX <- RAX
DAA,AL <- AL
DAS,AL <- AL
DIV rm8,AL AH <-
DIV rm16,AX DX <-
DIV rm32,EAX EDX <-
DIV rm64,RAX RDX <-
ENTER,mem RSP RBP <- RSP RBP
IDIV rm8,AL AH <-
IDIV rm16,AX DX <-
IDIV rm32,EAX EDX <-
IDIV rm64,RAX RDX <-
IMUL rm8,AX <- AL
IMUL rm16,DX AX <- AX
IMUL rm32,EDX EAX <- EAX
IMUL rm64,RDX RAX <- RAX
INS[BWD],mem <- RDI DX
IRET,RSP <- RSP
FXRSTOR,F[0-7] M[0-7] X[0-15] <- mem
FXSAVE,mem <- F[0-7] M[0-7] X[0-15]
LAHF,AH <-
LEAVE,RSP RBP <- RSP RBP
LGDT,GDTR <-
LIDT,IDTR <-
LLDT,LDTR <-
LMSW,CR0 <- CR0
LODS[BWDQ],AL <- mem RSI
LOOP,RCX <- RCX
LOOPE,RCX <- RCX
LOOPNE,RCX <- RCX
LTR,TASK <-
MASKMOVDQU,mem <- RDI
VMASKMOVDQU,mem <- RDI
MASKMOVQ,mem <- RDI
MONITOR,<- RAX
MOVS[BWDX],mem <- mem RSI RDI
MUL rm8,AX <- AL
MUL rm16,DX AX <- AX
MUL rm32,EDX EAX <- EAX
MUL rm64,RDX RAX <- RAX
MULX,<- RDX
OUTS[BWD],<- mem RSI DX
PCMPESTRI,ECX <-
VPCMPESTRI,ECX <-
PCMPESTRM,X0 <-
VPCMPESTRM,X0 <-
PCMPISTRI,ECX <-
VPCMPISTRI,ECX <-
PCMPISTRM,X0 <-
VPCMPISTRM,X0 <-
POP,RSP <- RSP mem
POPA,RSP DI SI BP BX DX CX AX <- RSP mem
POPAD,RSP RDI ESI EBP EBX EDX ECX EAX <- RSP mem
POPF,RSP <- RSP mem
POPFD,RSP <- RSP mem
POPFQ,RSP <- RSP mem
PUSH,mem RSP <- RSP
PUSHA,mem RSP <- RSP DI SI BP BX DX CX AX
PUSHAD,mem RSP <- RSP RDI ESI EBP EBX EDX ECX EAX
PUSHF,mem RSP <- RSP
PUSHFD,mem RSP <- RSP
PUSHFQ,mem RSP <- RSP
RDMSR,EDX EAX <- ECX
RDPKRU,EAX <-
RDPMC,EDX EAX <- ECX
RDTSC,EDX EAX <-
RDTSCP,EDX EAX ECX <-
RET,RSP <- RSP
SAHF,<- AH
SCAS[BWDQ],<- mem AL RDI
SGDT,<- GDTR
SIDT,<- IDTR
SLDR,<- LDTR
SMSW,CR0 <- CR0
STOS[BWDQ],mem <- AL RDI
VZEROALL,Y[0-15] <-
# x86asm knows VZEROUPPER, but not the Y registers.
#VZEROUPPER,Y[0-15] <-
WRMSR,<- EDX EAX ECX
WRPKRU,<- EAX
XGETBV,EDX EAX <- ECX
XLATB,AL <- mem RBX AL
XRSTOR,F[0-7] X[0-15] <- mem EDX EAX
XRSTORS,F[0-7] X[0-15] <- mem EDX EAX
XSAVE,mem <- EDX EAX F[0-7] X[0-15]
XSAVEC,mem <- EDX EAX F[0-7] X[0-15]
XSAVEOPT,mem <- EDX EAX F[0-7] X[0-15]
XSAVES,mem <- EDX EAX F[0-7] X[0-15]
XSETBV,<- EDX EAX ECX
